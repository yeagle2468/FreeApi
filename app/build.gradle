import com.android.build.gradle.api.BaseVariant

apply plugin: 'com.android.application'
apply plugin: 'walle'

android {
    compileSdkVersion 27

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.yeagle.freeapi"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("C:/android/keystore/debug.jks")
            storePassword "foschool"
            keyAlias "android"
            keyPassword "foschool"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':library')
    // 这个在这边依旧要重新写一次
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${DAGGER_VERSION}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${BUTTERKNIFE_VERSION}"
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:${PERMISSION_DISPATCHER}"

    implementation "com.ashokvarma.android:bottom-navigation-bar:${BOTTOM_NAVIGATION_BAR_VERSION}"
    implementation "com.meituan.android.walle:library:${WALLE_VERSION}"
    implementation "com.android.support:cardview-v7:${ANDROID_SUPPORT_VERSION}"

    implementation "de.hdodenhof:circleimageview:${CIRCLE_IMAGEVIEW_VERSION}"

    implementation 'com.github.chrisbanes:PhotoView:latest.release'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

walle {
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}-${flavorName}.apk'
    //configFile与channelFile两者必须存在一个，否则无法生成渠道包。两者都存在时优先执行configFile
    channelFile = new File("${project.getProjectDir()}/channel")
    //configFile = new File("${project.getProjectDir()}/config.json")
}

afterEvaluate {
    project.android.applicationVariants.all { BaseVariant variant ->
        variant.assemble.doFirst {
            if (variant.applicationId.endsWith(".debug")) {
                project.walle.channelFile = new File("${project.getProjectDir()}/channel_debug")
            }
        }
    }
}

tasks.withType(Javadoc) {
    options.encoding = "UTF-8"
}